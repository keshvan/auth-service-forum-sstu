basePath: /
definitions:
  authrequest.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  authrequest.RegisterRequest:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  authresponse.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  authresponse.LoginSuccessResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/entity.User'
    type: object
  authresponse.LogoutSuccessResponse:
    properties:
      message:
        example: logged out successfully
        type: string
    type: object
  authresponse.RefreshSuccessResponse:
    properties:
      access_token:
        type: string
    type: object
  authresponse.RegisterSuccessResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/entity.User'
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:3001
info:
  contact: {}
  description: API for auth service
  title: Auth Service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns user information along with a
        new access token. A new refresh token is set as an HTTP-only cookie, and any
        existing refresh token in the cookie is invalidated.
      parameters:
      - description: User Login Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/authrequest.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/authresponse.LoginSuccessResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/authresponse.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/authresponse.ErrorResponse'
      summary: Log in an existing user
      tags:
      - auth
  /logout:
    post:
      description: Logs out a user by deleting the refresh token from the server and
        clearing the refresh token cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged out
          schema:
            $ref: '#/definitions/authresponse.LogoutSuccessResponse'
      summary: Log out a user
      tags:
      - auth
  /refresh:
    post:
      description: Uses a refresh token to generate a new access token and a new refresh
        token. Refresh token is set as an HTTP-only cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully refreshed tokens
          schema:
            $ref: '#/definitions/authresponse.RefreshSuccessResponse'
        "401":
          description: Refresh token required or invalid/expired refresh token
          schema:
            $ref: '#/definitions/authresponse.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user account and returns user information along with
        an access token. A refresh token is set as an HTTP-only cookie.
      parameters:
      - description: User Credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/authrequest.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully registered
          schema:
            $ref: '#/definitions/authresponse.RegisterSuccessResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/authresponse.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/authresponse.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
